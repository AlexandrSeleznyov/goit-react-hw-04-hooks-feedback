{"version":3,"sources":["components/FeedbackOptions/FeedBackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedBackOptions.module.css","components/Statistics/Statistics.module.css"],"names":["FeedBackOptions","options","onLeaveFeedback","map","option","className","s","buttons","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","Section","title","children","Notification","message","App","useState","state","setState","Object","values","reduce","acc","value","keys","isShowStatistics","name","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6QA0BeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEC,UAAWC,IAAEC,QACbC,KAAK,SAELC,QAAS,kBAAMP,EAAgBE,IAJjC,SAMGA,GAHIA,S,gBCaAM,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIV,UAAWC,IAAEU,WAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,wCAAWC,KACX,yCAAYC,KACZ,uDAA0BC,SCMjBE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,+BAAOA,KCED,SAASC,IACtB,MAA0BC,mBAAS,CAAEZ,KAAM,EAAGC,QAAS,EAAGC,IAAK,IAA/D,mBAAOW,EAAP,KAAcC,EAAd,KAMMX,EAAQ,WACZ,OAAOY,OAAOC,OAAOH,GAAOI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAO5D7B,EAAUyB,OAAOK,KAAKP,GACtBQ,EAAmBlB,IAAU,EAEnC,OACE,qCACE,cAAC,EAAD,CAASI,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBjB,QAASA,EAASC,gBAlBjB,SAAC+B,GACvBR,GAAS,SAACS,GAAD,mBAAC,eAAoBA,GAArB,kBAAiCD,EAAOC,EAAUD,GAAQ,YAmBjE,cAAC,EAAD,CAASf,MAAM,aAAf,SACGc,EACC,cAAC,EAAD,CACErB,KAAMa,EAAMb,KACZC,QAASY,EAAMZ,QACfC,IAAKW,EAAMX,IACXC,MAAOA,IACPC,mBAlBDoB,KAAKC,MAAoB,IAAbZ,EAAMb,KAAcG,OAqBjC,cAAC,EAAD,CAAcO,QAAQ,2BClChCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,mC,kBCA5BD,EAAOC,QAAU,CAAC,WAAa,kC","file":"static/js/main.dceebea6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedBackOptions.module.css\";\n\nconst FeedBackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          className={s.buttons}\n          type=\"button\"\n          key={option}\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedBackOptions.propTypes = {\n  options: PropTypes.array,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedBackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statistics}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li> Bad: {bad}</li>\n      <li>Total: {total}</li>\n      <li>Positive Percentage: {positivePercentage}</li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <span>{message}</span>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState } from \"react\";\nimport FeedBackOptions from \"./components/FeedbackOptions/FeedBackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nexport default function App() {\n  const [state, setState] = useState({ good: 0, neutral: 0, bad: 0 });\n\n  const handleIncrement = (name) => {\n    setState((prevState) => ({ ...prevState, [name]: prevState[name] + 1 }));\n  };\n\n  const total = () => {\n    return Object.values(state).reduce((acc, value) => acc + value, 0);\n  };\n\n  const positivePercentage = () => {\n    return Math.round((state.good * 100) / total());\n  };\n\n  const options = Object.keys(state);\n  const isShowStatistics = total() > 0;\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedBackOptions options={options} onLeaveFeedback={handleIncrement} />\n      </Section>\n      <Section title=\"Statistics\">\n        {isShowStatistics ? (\n          <Statistics\n            good={state.good}\n            neutral={state.neutral}\n            bad={state.bad}\n            total={total()}\n            positivePercentage={positivePercentage()}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedBackOptions_buttons__3N6W0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2BvbK\"};"],"sourceRoot":""}